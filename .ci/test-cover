#!/bin/bash

set -e

# Determine the version of PostgreSQL.
if [ -z ${1+x} ] || [ -z ${2+x} ]; then
    echo "ERROR: No PostgreSQL OR PGRX version number passed to $0"
    echo "Usage:"
    echo "  $0 \$PG_VERSION \$PGRX_VERSION"
    exit 2
fi

PGVERSION=${1:-}
PGRXVERSION=${2:-}
DESTDIR="${PWD}/target/cover"

rustup component add llvm-tools
cargo install grcov "cargo-pgrx@${PGRXVERSION}"

export RUSTFLAGS="-C instrument-coverage"
if [ "$(uname -o)" = "Darwin" ]; then
    export RUSTFLAGS="-Clink-arg=-Wl,-undefined,dynamic_lookup $RUSTFLAGS"
fi

coverargs=()
prof_dirs=("${DESTDIR}")
if [ -n "${PGUSER}" ]; then
    coverargs+=(--runas "$PGUSER")
    if [ -z "${PGDATA}" ]; then
        echo "Use of PGUSER requires that PGDATA also be set"
        exit 1
    fi
    # --runas propagates LLVM_PROFILE_FILE, but then the process writes no
    # profiles at all. So don't set it and it will write profiles to PWD for the
    # current user and to PGDATA for the PGUSER user.
    prof_dirs=("$PWD" "${PGDATA}/${PGVERSION}")
    # Create DESTDIR so that grcov can write to it below.
    mkdir -p "${DESTDIR}"
else
    # Running as current user; put profiles into DESTDIR.
    export LLVM_PROFILE_FILE="${DESTDIR}/default_%m_%p.profraw"
fi
if [ -n "${PGDATA}" ]; then
    coverargs+=(--pgdata "$PGDATA")
fi

cargo pgrx test "${coverargs[@]}" "pg${PGVERSION}"

grcov "${prof_dirs[@]}" \
    --keep-only src/lib.rs \
    --ignore-not-existing \
    --excl-line 'unreachable!' \
    --llvm \
    --binary-path "target/debug/" \
    -s . \
    --branch \
    -o "${DESTDIR}" \
    --output-types html,cobertura,markdown

cat "${DESTDIR}/markdown.md"

if [ "$(uname -o)" = "Darwin" ] && [ -z "$CI" ]; then
    open "${DESTDIR}/html/index.html"
fi
